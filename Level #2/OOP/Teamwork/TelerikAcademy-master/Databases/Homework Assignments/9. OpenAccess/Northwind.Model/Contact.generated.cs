#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using NorthwindFramework;


namespace Northwind.Model	
{
	[Table("Contacts")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	[Serializable()]
	public partial class Contact : NotificationObject
	{
		private int _contactID;
		[Column("ContactID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "int")]
		[Storage("_contactID")]
		public virtual int ContactID 
		{ 
		    get
		    {
		        return this._contactID;
		    }
		    set
		    {
				if (this.ContactID == value)
				{
					return;
				}
		        this._contactID = value;
				this.RaisePropertyChanged("ContactID");
		    }
		}
		
		private string _contactType;
		[Column("ContactType", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactType")]
		public virtual string ContactType 
		{ 
		    get
		    {
		        return this._contactType;
		    }
		    set
		    {
				if (this.ContactType == value)
				{
					return;
				}
		        this._contactType = value;
				this.RaisePropertyChanged("ContactType");
		    }
		}
		
		private string _companyName;
		[Column("CompanyName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 40, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyName")]
		public virtual string CompanyName 
		{ 
		    get
		    {
		        return this._companyName;
		    }
		    set
		    {
				if (this.CompanyName == value)
				{
					return;
				}
		        this._companyName = value;
				this.RaisePropertyChanged("CompanyName");
		    }
		}
		
		private string _contactName;
		[Column("ContactName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 30, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactName")]
		public virtual string ContactName 
		{ 
		    get
		    {
		        return this._contactName;
		    }
		    set
		    {
				if (this.ContactName == value)
				{
					return;
				}
		        this._contactName = value;
				this.RaisePropertyChanged("ContactName");
		    }
		}
		
		private string _contactTitle;
		[Column("ContactTitle", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 30, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactTitle")]
		public virtual string ContactTitle 
		{ 
		    get
		    {
		        return this._contactTitle;
		    }
		    set
		    {
				if (this.ContactTitle == value)
				{
					return;
				}
		        this._contactTitle = value;
				this.RaisePropertyChanged("ContactTitle");
		    }
		}
		
		private string _address;
		[Column("Address", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 60, Scale = 0, SqlType = "nvarchar")]
		[Storage("_address")]
		public virtual string Address 
		{ 
		    get
		    {
		        return this._address;
		    }
		    set
		    {
				if (this.Address == value)
				{
					return;
				}
		        this._address = value;
				this.RaisePropertyChanged("Address");
		    }
		}
		
		private string _city;
		[Column("City", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 15, Scale = 0, SqlType = "nvarchar")]
		[Storage("_city")]
		public virtual string City 
		{ 
		    get
		    {
		        return this._city;
		    }
		    set
		    {
				if (this.City == value)
				{
					return;
				}
		        this._city = value;
				this.RaisePropertyChanged("City");
		    }
		}
		
		private string _region;
		[Column("Region", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 15, Scale = 0, SqlType = "nvarchar")]
		[Storage("_region")]
		public virtual string Region 
		{ 
		    get
		    {
		        return this._region;
		    }
		    set
		    {
				if (this.Region == value)
				{
					return;
				}
		        this._region = value;
				this.RaisePropertyChanged("Region");
		    }
		}
		
		private string _postalCode;
		[Column("PostalCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 10, Scale = 0, SqlType = "nvarchar")]
		[Storage("_postalCode")]
		public virtual string PostalCode 
		{ 
		    get
		    {
		        return this._postalCode;
		    }
		    set
		    {
				if (this.PostalCode == value)
				{
					return;
				}
		        this._postalCode = value;
				this.RaisePropertyChanged("PostalCode");
		    }
		}
		
		private string _country;
		[Column("Country", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 15, Scale = 0, SqlType = "nvarchar")]
		[Storage("_country")]
		public virtual string Country 
		{ 
		    get
		    {
		        return this._country;
		    }
		    set
		    {
				if (this.Country == value)
				{
					return;
				}
		        this._country = value;
				this.RaisePropertyChanged("Country");
		    }
		}
		
		private string _phone;
		[Column("Phone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 24, Scale = 0, SqlType = "nvarchar")]
		[Storage("_phone")]
		public virtual string Phone 
		{ 
		    get
		    {
		        return this._phone;
		    }
		    set
		    {
				if (this.Phone == value)
				{
					return;
				}
		        this._phone = value;
				this.RaisePropertyChanged("Phone");
		    }
		}
		
		private string _extension;
		[Column("Extension", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 4, Scale = 0, SqlType = "nvarchar")]
		[Storage("_extension")]
		public virtual string Extension 
		{ 
		    get
		    {
		        return this._extension;
		    }
		    set
		    {
				if (this.Extension == value)
				{
					return;
				}
		        this._extension = value;
				this.RaisePropertyChanged("Extension");
		    }
		}
		
		private string _fax;
		[Column("Fax", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 24, Scale = 0, SqlType = "nvarchar")]
		[Storage("_fax")]
		public virtual string Fax 
		{ 
		    get
		    {
		        return this._fax;
		    }
		    set
		    {
				if (this.Fax == value)
				{
					return;
				}
		        this._fax = value;
				this.RaisePropertyChanged("Fax");
		    }
		}
		
		private string _homePage;
		[Column("HomePage", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "ntext")]
		[Storage("_homePage")]
		public virtual string HomePage 
		{ 
		    get
		    {
		        return this._homePage;
		    }
		    set
		    {
				if (this.HomePage == value)
				{
					return;
				}
		        this._homePage = value;
				this.RaisePropertyChanged("HomePage");
		    }
		}
		
		private string _photoPath;
		[Column("PhotoPath", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_photoPath")]
		public virtual string PhotoPath 
		{ 
		    get
		    {
		        return this._photoPath;
		    }
		    set
		    {
				if (this.PhotoPath == value)
				{
					return;
				}
		        this._photoPath = value;
				this.RaisePropertyChanged("PhotoPath");
		    }
		}
		
		private byte[] _photo;
		[Column("Photo", OpenAccessType = OpenAccessType.LongVarBinary, IsNullable = true, Length = 0, Scale = 0, SqlType = "image")]
		[Storage("_photo")]
		public virtual byte[] Photo 
		{ 
		    get
		    {
		        return this._photo;
		    }
		    set
		    {
				if (this.Photo == value)
				{
					return;
				}
		        this._photo = value;
				this.RaisePropertyChanged("Photo");
		    }
		}
		
	}
}
