@using TicketingSystem.WebClient.Models
@model CreateTicketViewModel

@{
    ViewBag.Title = "Add ticket";
}

<h2>Add ticket</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset class="form-horizontal">

        <div class="control-group">
            @Html.LabelFor(model => model.Category, new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().DropDownList()
                .Name("Category") // Name of the widget should be the same as the name of the property
                .DataValueField("Id")
                .DataTextField("Name")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetCategories", "Tickets");
                    });
                })
                )
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Priority, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Priority)
                @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.ScreenshotUrl, "Screenshot URL", new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.ScreenshotUrl)
                @Html.ValidationMessageFor(model => model.ScreenshotUrl, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Add ticket" class="btn" />
        </div>
    </fieldset>
}
<script>
    function validateContent(input) {

        if (input.toLowerCase().indexOf("bug") != -1) {
            alert("The title should not contain the word 'bug'.");
            return false;
        }
        return true;
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

